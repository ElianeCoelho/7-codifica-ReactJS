{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellia\\\\PROJETOS\\\\CODIFICA\\\\7-codifica-reactjs\\\\src\\\\components\\\\CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    if (isRunning && time > 0) {\n      const timer = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n    if (time === 0 && isRunning) {\n      alert(\"O tempo acabou!\");\n      setIsRunning(false);\n    }\n  }, [isRunning, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Timer com Contagem Regressiva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Defina o tempo (segundos)\",\n      value: time,\n      onChange: e => setTime(Number(e.target.value)),\n      disabled: isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(true),\n        children: \"Iniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(false),\n        children: \"Pausar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(0),\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tempo restante: \", time, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"th9G96ix7qzT0R5Zt2LTZjfttJA=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","time","setTime","isRunning","setIsRunning","timer","setInterval","prevTime","clearInterval","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","Number","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ellia/PROJETOS/CODIFICA/7-codifica-reactjs/src/components/CountdownTimer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CountdownTimer() {\r\n  const [time, setTime] = useState(0);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isRunning && time > 0) {\r\n      const timer = setInterval(() => {\r\n        setTime((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n    if (time === 0 && isRunning) {\r\n      alert(\"O tempo acabou!\");\r\n      setIsRunning(false);\r\n    }\r\n  }, [isRunning, time]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Timer com Contagem Regressiva</h2>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Defina o tempo (segundos)\"\r\n        value={time}\r\n        onChange={(e) => setTime(Number(e.target.value))}\r\n        disabled={isRunning}\r\n      />\r\n      <div>\r\n        <button onClick={() => setIsRunning(true)}>Iniciar</button>\r\n        <button onClick={() => setIsRunning(false)}>Pausar</button>\r\n        <button onClick={() => setTime(0)}>Reiniciar</button>\r\n      </div>\r\n      <p>Tempo restante: {time}s</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,IAAIF,IAAI,GAAG,CAAC,EAAE;MACzB,MAAMI,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9BJ,OAAO,CAAEK,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;IACnC;IACA,IAAIJ,IAAI,KAAK,CAAC,IAAIE,SAAS,EAAE;MAC3BM,KAAK,CAAC,iBAAiB,CAAC;MACxBL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACD,SAAS,EAAEF,IAAI,CAAC,CAAC;EAErB,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtChB,OAAA;MACEiB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAEhB,IAAK;MACZiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACkB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;MACjDK,QAAQ,EAAEnB;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,IAAI,CAAE;QAAAM,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DhB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,KAAK,CAAE;QAAAM,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DhB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,CAAC,CAAE;QAAAQ,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNhB,OAAA;MAAAY,QAAA,GAAG,kBAAgB,EAACT,IAAI,EAAC,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACd,EAAA,CAnCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}